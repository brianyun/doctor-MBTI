{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { Typography, Row, Col } from \"antd\";\nimport { useSelector } from \"react-redux\";\nconst {\n  Text\n} = Typography;\nimport { ADD_URL } from \"../reducers/answer\";\nimport db from \"../back/firestore\";\nimport storage from \"../back/cloudStorage\";\nimport { v4 as uuid } from \"uuid\";\nimport calculator from \"../back/calculator\";\nimport result from \"../assets/result.json\";\n\nconst Loading = () => {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    ans\n  } = useSelector(state => state.answer);\n  const {\n    url\n  } = useSelector(state => state.answer);\n  const {\n    0: screenshotUrl,\n    1: setScreenshotUrl\n  } = useState(null);\n  const {\n    0: thumbUrl,\n    1: setThumbUrl\n  } = useState(null);\n  const {\n    0: v,\n    1: setV\n  } = useState(null);\n  useEffect(() => {\n    if (ans) {\n      setV(result[calculator(ans)]);\n      const now = new Date();\n      const uid = uuid();\n      const userObj = {\n        answer: ans,\n        type: calculator(ans),\n        created_at: now,\n        updated_at: now\n      };\n      db.collection(\"results\").doc(uid).set(userObj).then(res => {}).catch(error => {\n        alert(\"error: \" + error.message);\n        console.log(error);\n      });\n    } else {\n      router.push(\"/result/\".concat(calculator([])));\n    }\n  }, [ans]);\n  useEffect(() => {\n    if (v) {\n      storage.ref().child(v[\"screenshot\"]).getDownloadURL().then(url => {\n        setScreenshotUrl(url);\n      }).catch(err => {\n        return;\n      });\n      storage.ref().child(v[\"thumbnail\"]).getDownloadURL().then(url => {\n        setThumbUrl(url);\n      }).catch(err => {\n        return;\n      });\n    }\n  }, [v]);\n  useEffect(() => {\n    if (screenshotUrl && thumbUrl) {\n      dispatch({\n        type: ADD_URL,\n        data: {\n          screenshotUrl: screenshotUrl,\n          thumbUrl: thumbUrl\n        }\n      });\n    }\n  }, [screenshotUrl, thumbUrl]);\n  useEffect(() => {\n    router.push(\"/result/\".concat(calculator(ans)));\n  }, [url[\"thumbUrl\"]]);\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    justify: \"space-around\"\n  }, __jsx(Col, {\n    xs: 16,\n    sm: 14,\n    md: 10,\n    lg: 8,\n    xl: 8\n  }, __jsx(\"img\", {\n    src: require(\"../assets/images/v_curious.gif\"),\n    alt: \"\",\n    style: {\n      width: \"100%\",\n      marginTop: \"100px\"\n    }\n  }))), __jsx(Row, {\n    justify: \"center\"\n  }, __jsx(Col, {\n    xs: 16,\n    sm: 14,\n    md: 10,\n    lg: 8,\n    xl: 8\n  }, __jsx(Text, {\n    style: {\n      textAlign: \"center\",\n      display: \"block\",\n      marginTop: \"30px\",\n      fontSize: \"20px\"\n    }\n  }, \"\\uBD84\\uC11D\\uC911..\"))));\n};\n\nexport default Loading;","map":null,"metadata":{},"sourceType":"module"}