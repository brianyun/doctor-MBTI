{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { useDispatch } from \"react-redux\";\nimport { ADD_ANSWER } from \"../reducers/answer\";\nimport Question from \"../components/Question\";\nimport ProgressBar from \"../components/ProgressBar\";\nimport list from \"../assets/list.json\";\n\nvar Test = function Test() {\n  var router = useRouter();\n  var dispatch = useDispatch();\n  var maxCount = list.arr.length;\n\n  var _useState = useState([]),\n      answerArr = _useState[0],\n      setAnswerArr = _useState[1];\n\n  var _useState2 = useState(1),\n      index = _useState2[0],\n      setIndex = _useState2[1];\n\n  var handler = function handler(ans) {\n    setAnswerArr(function (prevArr) {\n      return [].concat(_toConsumableArray(prevArr), [ans]);\n    });\n\n    if (index === maxCount) {\n      router.push(\"/loading\");\n      return;\n    }\n\n    setIndex(index + 1);\n  };\n\n  useEffect(function () {\n    if (answerArr.length === maxCount) {\n      console.log(\"AnswerArr is: \" + answerArr);\n      dispatch({\n        type: ADD_ANSWER,\n        data: answerArr\n      });\n    }\n  });\n  return __jsx(\"div\", null, __jsx(\"div\", null, __jsx(Question, {\n    index: index,\n    handler: handler\n  })), __jsx(ProgressBar, {\n    i: index,\n    length: maxCount\n  }));\n};\n\nexport default Test;","map":null,"metadata":{},"sourceType":"module"}